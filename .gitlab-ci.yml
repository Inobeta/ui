image: node:10.11.0

stages:
  - deploy

deploy:
  stage: deploy
  script:
    - echo '//gitlab.com/api/v4/projects/${CI_PROJECT_ID}/packages/npm/:_authToken=${CI_JOB_TOKEN}'>.npmrc
    - npm install
    - npm run packagr
    - npm pack dist/
    - npm publish Inobeta-inobeta-ui-$CURRENT_VERSION.tgz --tag latest
  only:
    - master
deploy_unstable:
  stage: deploy
  script:
    - echo '//gitlab.com/api/v4/projects/${CI_PROJECT_ID}/packages/npm/:_authToken=${CI_JOB_TOKEN}'>.npmrc
    - create_temp_version
    - npm install
    - npm run packagr
    - npm pack dist/
    - npm publish Inobeta-inobeta-ui-$CURRENT_VERSION-$CI_COMMIT_SHA.tgz --tag unstable
  except:
    - master
pages:
  stage: deploy
  script:
    - npx @compodoc/compodoc -p tsconfig.app.json
    - dir="$CURRENT_VERSION"
    - if [ "$CI_COMMIT_REF_SLUG" == "$CI_DEFAULT_BRANCH" ]; then dir="master"; fi;
    - mkdir -p public
    - mkdir -p public/$dir/
    - mv documentation public/$dir/
  artifacts:
    name: "$CURRENT_VERSION"
    paths:
      - public
  cache:
    paths:
    - public
  only:
    - master
    - canary
.inobeta_pkg: &inobeta_pkg |
  [[ "$TRACE" ]] && set -x

  function set_current_version() {
    CURRENT_VERSION=$(cat package.json | grep version | head -1 | awk -F: '{ print $2 }' | sed 's/[\",]//g' | tr -d '[[:space:]]')
  }

  function create_temp_version() {
      sed -i "s/\"version\"\: \"$CURRENT_VERSION\"/\"version\": \"$CURRENT_VERSION-$CI_COMMIT_SHA\"/g" ./package.json
      echo $CURRENT_VERSION-$CI_COMMIT_SHA
  }

before_script:
  - *inobeta_pkg
  - set_current_version

