image: node:20

stages:
  - quality
  - install
  - npm:deploy
  - docs:build
  - docs:deploy
  - examples:build
  - examples:deploy

cache:
  key: $CI_COMMIT_REF_SLUG-$CI_PROJECT_DIR
  policy: pull-push
  paths:
    - .npm/

install:
  stage: install
  script:
    - npm ci --cache .npm --prefer-offline --no-audit --no-fund
    - npm run build
    - rm -rf node_modules
  artifacts:
    paths:
      - dist
    expire_in: 1 hour
  tags:
    - gitlab-org-docker
  only:
    - /^develop\/[0-9]+\.[0-9]+\.[0-9]+$/
    - /^[0-9]+\.[0-9]+\.[0-9]+$/
    - master

test_unit:
  image: inobeta/node-chrome:20
  stage: quality
  script:
    - npm ci --cache .npm --prefer-offline --no-audit --no-fund && npm run test-ci
  allow_failure: true
  artifacts:
    paths: [./src/coverage]
  tags:
    - gitlab-org-docker
  except:
    - /^[0-9]+\.[0-9]+\.[0-9]+$/

deploy:
  stage: npm:deploy
  script:
    - npm ci --cache .npm --prefer-offline --no-audit --no-fund
    - npm run packagr
    - npm pack dist/
    - npm publish inobeta-ui-$CURRENT_VERSION.tgz --tag latest
  tags:
    - gitlab-org-docker
  only:
    - /^[0-9]+\.[0-9]+\.[0-9]+$/

deploy_unstable:
  stage: npm:deploy
  script:
    - create_temp_version
    - npm ci --cache .npm --prefer-offline --no-audit --no-fund
    - npm run packagr
    - npm pack dist/
    - npm publish inobeta-ui-$TEMP_VERSION.tgz --tag unstable
  tags:
    - gitlab-org-docker
  only:
    - /^develop\/[0-9]+\.[0-9]+\.[0-9]+$/

deploy_testing:
  stage: npm:deploy
  script:
    - create_temp_version
    - npm ci --cache .npm --prefer-offline --no-audit --no-fund
    - npm run packagr
    - npm pack dist/
    - npm publish inobeta-ui-$TEMP_VERSION.tgz --tag testing
  tags:
    - gitlab-org-docker
  except:
    - /^develop\/[0-9]+\.[0-9]+\.[0-9]+$/
    - /^[0-9]+\.[0-9]+\.[0-9]+$/
  when: manual

test_package_creation:
  stage: quality
  script:
    - create_temp_version
    - npm ci --cache .npm --prefer-offline --no-audit --no-fund
    - npm run packagr
    - npm pack dist/
  tags:
    - gitlab-org-docker
  except:
    - master
    - /^develop\/[0-9]+\.[0-9]+\.[0-9]+$/
    - /^[0-9]+\.[0-9]+\.[0-9]+$/

docs_build:
  stage: docs:build
  script:
    - npm ci --cache .npm --prefer-offline --no-audit --no-fund
    - npm run build-storybook
  artifacts:
    paths:
      - dist
    when: on_success
    expire_in: "30 mins"
  tags:
    - gitlab-org-docker
  only:
    - master
    - /^develop\/[0-9]+\.[0-9]+\.[0-9]+$/
    - /^canary\/[0-9]+\.[0-9]+\.[0-9]+$/
    - /^[0-9]+\.[0-9]+\.[0-9]+$/

docs_publish:
  stage: docs:deploy
  script:
    - dir="$CURRENT_VERSION"
    - if [ "$CI_COMMIT_REF_SLUG" == "$CI_DEFAULT_BRANCH" ]; then dir="current"; fi;
    - mkdir -p ~/.ssh && echo "$SSH_STAGING" | tr -d '\r' > ~/.ssh/id_rsa && chmod -R 600 ~/.ssh
    - ssh-keyscan -t rsa $STAGING_HOST >> ~/.ssh/known_hosts
    - ssh $STAGING_USER@$STAGING_HOST "rm -rf ~/Apps/$APPNAME/docs/v/$dir && mkdir -p ~/Apps/$APPNAME/docs/v/$dir"
    - scp -r dist/storybook/ui/* $STAGING_USER@$STAGING_HOST:~/Apps/$APPNAME/docs/v/$dir
  tags:
    - dedicated
  interruptible: true
  only:
    - master
    - /^develop\/[0-9]+\.[0-9]+\.[0-9]+$/
    - /^canary\/[0-9]+\.[0-9]+\.[0-9]+$/
    - /^[0-9]+\.[0-9]+\.[0-9]+$/

examples:build:
  image: docker:latest
  stage: examples:build
  services:
    - docker:dind
  script:
    - docker build -t $IMAGE:$CURRENT_VERSION .
    - docker login -u $GITLAB_USER -p $AUTH_TOKEN registry.gitlab.com
    - docker push $IMAGE:$CURRENT_VERSION
  tags:
    - gitlab-org-docker
  only:
    - /^develop\/[0-9]+\.[0-9]+\.[0-9]+$/
    - /^[0-9]+\.[0-9]+\.[0-9]+$/

examples:deploy:
  image: docker:latest
  stage: examples:deploy
  services:
    - docker:dind
  script:
    - prepare_staging
    - service_pullrestart_staging $IMAGE $CURRENT_VERSION $SERVICE
  tags:
    - dedicated
  environment:
    name: examples
    url: $STAGING_URL
  only:
    - /^develop\/[0-9]+\.[0-9]+\.[0-9]+$/
    - /^[0-9]+\.[0-9]+\.[0-9]+$/

.inobeta_pkg: &inobeta_pkg |
  [[ "$TRACE" ]] && set -x

  function set_current_version() {
    CURRENT_VERSION=$(cat package.json | grep version | head -1 | awk -F: '{ print $2 }' | sed 's/[\",]//g' | tr -d '[[:space:]]')
  }

  function create_temp_version() {
      TEMP_VERSION=$CURRENT_VERSION-build.$(date +%s)
      sed -i "s/\"version\"\: \"$CURRENT_VERSION\"/\"version\": \"$TEMP_VERSION\"/g" ./package.json
      echo $TEMP_VERSION
  }

  function prepare_staging() {
    mkdir -p ~/.ssh && echo "$SSH_STAGING" | tr -d '\r' > ~/.ssh/id_rsa && chmod -R 600 ~/.ssh
    ssh-keyscan -t rsa $STAGING_HOST >> ~/.ssh/known_hosts
    ssh $STAGING_USER@$STAGING_HOST "mkdir -p ~/Apps/$APPNAME"
    scp docker-compose.yml $STAGING_USER@$STAGING_HOST:~/Apps/$APPNAME
    echo "IMAGE=$IMAGE" >> ".env"
    echo "EXTERNALPORT_HTTP=$EXTERNALPORT_HTTP" >> ".env"
    echo "version=$CURRENT_VERSION" >> ".env"
    scp .env $STAGING_USER@$STAGING_HOST:~/Apps/$APPNAME
  }


  function service_pullrestart_staging() {
    ssh $STAGING_USER@$STAGING_HOST "cd ~/Apps/$APPNAME && docker login -u $GITLAB_USER -p $AUTH_TOKEN registry.gitlab.com && docker pull $1:$2 && docker-compose stop $3 && docker-compose up -d $3"
  }

before_script:
  - *inobeta_pkg
  - set_current_version
